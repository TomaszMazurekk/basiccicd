name: CI weather app

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
    build:
        name: Build and test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                node-version: '20'
                cache: 'npm'

            - name: Install Dependencies
              run: npm ci

            - name: Build Application
              run: npm run build

            - name: run Tests with coverage
              run: npm run test:coverage
              continue-on-error: true
<<<<<<< HEAD
=======
    
>>>>>>> ci-workflow
    docker:
        name: Docker Build and Push
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: build docker image
              run: docker build -t wheather -app .

            - name: Run docker container
              run: |
                docker run -d \
                    -p 3000:3000 \
                    -e WEATHER_API_KEY = ${{ secrets.WHEATHER_API_KEY }} \
                    -- name weather-app-container \
                    weather-app

                # Poczekaj na uruchomienie kontenera
                sleep: 5
            
            - name: Test running container
              run:
                #Test endpointu głównego
<<<<<<< HEAD
                curl -f http://localhost:3000 || exit 1
=======
                curl -f http://localhost:3000 | exit 1
>>>>>>> ci-workflow
                
            - name: Test endpoint with secret
              run:
                #Test endpointu pogody dla Zakopanego
                response = $(curl -s http://localhost:3000/weather/Zakopane)
                if [[ $response != *"tired"* ]]; then
                    echo "Aplikacja jest zmęczona, szefie."
                    exit 1
                fi
<<<<<<< HEAD
=======


    

  
>>>>>>> ci-workflow

